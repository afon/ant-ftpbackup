h1{font-size: 150%}. Ant FTP Backup

p>. "Русский":./ru/index.html | "English":../index.html

p. Это "Ant":http://ant.apache.org скрипт, предназначенный для бекапа вашего сайта по FTP - имеется в виду, с ftp на локальный жесткий диск (или туда, где вы этот скрипт запускаете). 
*И это бесплатно, как дружеское пиво, но займет у вас несколько минут на настройку*. 

h2. Возможности: 

* бекап вашего сайта по ftp;
* создание архива для каждого бекапа;
* загрузка только новых или изменённых файлов - экномит ваш сетефой трафик;
* создание очередного бекап-архива, только если были изменения на сервере - экономит ваше дисковое пространство;
* запись лог-сообщений во время бекапа.

h2. Установка:

(очень кратко, но дальше есть подробное описание)
 
* загрузить и установить Java (в смысле, JRE), добавить переменную окружения JAVA_HOME в систему;
* загрузить и распаковать Ant, добавить в систему переменную окружения ANT_HOME; 
* запустить 'ant -f fetch.xml' из командной строки в ANT_HOME директории для загрузки нескольких дополнительных библиотек;
* загрузить этот самый ftpbackup.xml, изменить параметры, такие как user, password, host и тп;
* запустить из командной строки "ant -f ftpbackup.xml" и наслаждаться процессом. 

h2. Бекап по расписанию: 

Используется встроенный в вашу ОС планировщик задач. Для Linux это будет "crontab", а для Windows это будет "Task Scheduler". 

h2. Ресурсы

* "Скачать ant-ftpbackup":../ant-ftpbackup.xml
* "Читать полное описание свойств настройки":./props.html

h1{font-size: 150%}. Пошаговая инструкция для некомпьютерщиков

В этой инструкции я буду полагать, что вы пользователь Windows. Если вы пользователь linux или mac - вам просто нужно использовать менеджер пакетов в вашей системе для поиска и установки всех необходимых программ (Java JRE и ANT), и все описанные далее шаги (установка, настройка переменных окружения) будут сделаны автоматически. Ну, начнем. 

h3. Установка Java

Для загрузки последней версии JRE лучше всего использовать эту страничку "java.com/en/download":http://java.com/en/download/index.jsp на сайте Java. Кликайте по большой красной кнопке с надписью "*Free Java Download*", сохраните инсталлятор и затем запустите, как любой другой обычный инсталлятор любой другой программы. Во время инсталляции запомните *куда* Java хочет буть установленной, запомните, а лучше сразу скопируйте этот путь, он нам понадобится на следующем шаге.

"Вот тут":http://java.com/ru/download/help/windows_manual_download.xml есть хорошая Sun'овская страничка с картинками, как скачать, запустить и установить JRE, это на тот случай, если вы все еще не поняли как это сделать :) 

h3. Настройка переменной окружения JAVA_HOME

Откройте *Панель Управления*, найдите секцию *Система и безопасность*, внутри неё найдите секцию *Система*, в левом верхнем углу этого окна найдите ссылку *Дополнительные настройки системы*, кликните и появится всплывающее окно - *Дополнительные настройки* с открытой вкладкой *Дополнительно*. Фуф, вот вы и там, где нужно! Теперь найдите кнопку *Переменные окружения*, нажмите её и появится еще одно окошко *Переменные окружения*. В верхней секции  *Пользовательские переменные* нажмите кнопку *Создать* и добавьте новую переменную. "Имя переменной" задайте "@JAVA_HOME@", а "Значение переменной" будет тот путь, куда установилась JRE, этот путь вы должны были скопировать на прошлом шаге. Обычно Java устанавливается в "@C:\Program Files\Java\jrex.x.x-xx@", где буквы X означаются номер версии и сборки. Нажмите Ok, Ok, Ok, чтобы сохранить созданную переменную. На этом шаг закончен.

h3. Загрузка и распаковка Ant, настройка переменной окружения ANT_HOME

Теперь в браузере откройте "Apache Ant - Binary Distributions":http://ant.apache.org/bindownload.cgi - страничку загрузки ANT, прокрутите страницу немного вниз и найдите строку типа такой: "@.zip archive: apache-ant-x.x.x-bin.zip [PGP] [SHA1] [SHA512] [MD5]@". Это то, что нужно скачать - загрузите zip версию сборки Ant'а и распакуйте куда-нибудь архив, лучше всего в какой-нибудь короткий путь, скажем, в директорию   "@C:\tools\apache-ant-x.x.x@". К примеру, в моем случае это выглядит как @C:\tools\apache-ant-1.8.4@, потому что 1.8.4 на данный момент последняя версия ANT-a. После распаковки проверьте, что в указанной вами директории после распаковки появились поддиректории: "bin", "etc","lib" и "manual". Если с этим все нормально, создайте переменную @ANT_HOME@, которая будет указывать на этот путь: @C:\tools\apache-ant-x.x.x@. Переменная создается точно так же, как мы создавали  @JAVA_HOME@ на прошлом этапе.  

h3. Необязательно, но для удобства можно подправить переменную PATH

В настоящий момент вы можете запускать Ant только из ANT_HOME/bin директории. Давайте проверим это: 

Окройте окно командной строки (нажмите кнопку "Пуск" в главном меню, наберите "cmd" в строке "поиска" и нажмите Enter), в окне командной строки наберите

bc..  C:\tools\apache-ant-x.x.x\bin\ant -v

p. Тут, конечно, укажите тот путь, куда *вы* установили Ant. Если все правильно, вы должны увидеть сообщение, похожее на это: 

bc.. 
Apache Ant(TM) version 1.8.4 compiled on May 22 2012
Trying the default build file: build.xml
Buildfile: build.xml does not exist!
Build failed

p. Но не удобнее ли запускать ANT без указания пути? Просто 'ant' в командной строке и все? Это решается добавлением ' ANT_HOME/bin' пути в переменную окружения @PATH@. 

Откройте опять окно "*Переменные окружения*" и найдите в секции "*Пользовательские переменные*" переменную @PATH@. Если такая там есть, тогда немного подправьте её значение: добавьте к концу строки "@;%ANT_HOME%\bin@" - с точкой-с-запятой и знаками процента, и сохраните (нажмите Ok, Ok, Ok). Если такой переменной нету в списке Пользовательских переменных, тогда создайте ее: Имя @PATH@ и значение такое: "@%PATH%;%ANT_HOME%\bin@" - со знаками процента, точками с запятой и слешами. Сохраните. 

Откройте новое окно "@cmd@" и выполните "@ant -v@" без указания пути. Вы должны увидеть такое же, сообщение, как и в прошлый раз. 
Готово. 

h3. Скачайте и настройте ant-ftpbackup
 
Скачайте "ant-ftpbackup.xml":../ant-ftpbackup.xml прямо по этой ссылке, сохраните куда-нибудь файл, скажем, в  @C:\tools\ant-ftpbackup.xml@. Теперь давайте настроим и запустим ваш первый бекап. 

Откройте полученный файл в текстовом редакторе и откорректируйте несколько необходимых настроек для доступа к вашему сайту по FTP. 
Вверху файла найдите блок текста, похожий на этот: 

bc.. 
<property name="ftp.host" value="localhost" />
<property name="ftp.port" value="21" />
<property name="ftp.user" value="name" />
<property name="ftp.password" value="password" />
<property name="fromdirectory" value="/xampp" />
<property name="todirectory" value="D:\dev\backups\xamppexample" />
<property name="keep.last.n.archives" value="4" />
	
p. Вам нужно изменить эти параметры в соответствии с вашими настройками доступа к ftp. 
@ftp.host@ - например @mysite.com@, здесь нет неообходимости прописывать тип протокола, как @ftp://@. Просто укажите имя вашего домена и все. 
@ftp.port@ - как правило, большинство хостинг-провайдеров используют дефолтный ftp порт @21@. И обычно вам ничего не нужно здесь менять. Но если у вашего ресурса другой порт, скорее всего вы об этом знаете. 
@ftp.user@ - ваш логин для доступа по ftp. 
@ftp.password@ - ваш пароль для доступа по ftp.
@fromdirectory@ - путь к удаленной диектории, содержимое которой вы хотите бекапить. Лидирующий слеш в корне пути @/@ не обязателен, но в любом случае @fromdirectory@ должен быть указан от корня вашего ftp ресурса. Пример: @www/mysite.com/public_html/data@.
@todirectory@ - Просто полный путь той директории, куда вы хотит сохранять бекап. Пример: @C:\backups\mysite.com\databak@. В случае, когда какие-то директори этого пути не существуют, они будут созданы автоматически. Например @backups@ может быть создана, если ее еще нету в @C:\backups\mysite.com@. 

Для первого запуска все готово. Теперь, чтобы быстро проверить, как это работает, укажите @fromdirectory@, в которой расположено всего несколько маленьких файлов. Другие свойства, которые вам могут понадобится для тонкой настройки, можно будет поменять позже, если первый запуск пройдет успешно.

h3. Run first backup

Откройте @cmd@ окошко еще раз и запустите такую команду: @ant -f C:\tools\ant-ftpbackup.xml@. В ответ увидите что-то такое: 

bc.. 
Buildfile: C:\tools\ant-ftpbackup.xml
init:
    [mkdir] Created dir: C:\backups\mysite.com\databak\target
    [mkdir] Created dir: C:\backups\mysite.com\databak\md5
runbackup:
prepare:
     [echo] Backup begin at 2013-02-27.15-49-50
     [echo] Deleting previous log file
download:
      [ftp] getting files
      [ftp] transferring .modell to C:\backups\mysite.com\databak\target\.modell
      [ftp] transferring .modell-usb to C:\backups\mysite.com\databak\target\.modell-usb
      [ftp] transferring .version to C:\backups\mysite.com\databak\target\.version
......
      [ftp] transferring xampp.css to C:\backups\mysite.com\databak\target\xampp.css
      [ftp] transferring xampp.js to C:\backups\mysite.com\databak\target\xampp.js
      [ftp] 125 files retrieved
checksum.and.archive:
 [loadfile] C:\backups\mysite.com\databak\checksum.md5 doesn't exist
     [echo] A new archive will be created. Have changes from previous time
archive:
      [zip] Building zip: C:\backups\mysite.com\databak\2013-02-27.15-49-50.zip
clean:
keep.last.archives:
     [echo] keeping maximum 4 newest archives
BUILD SUCCESSFUL
Total time: 3 seconds

p. Если @cmd@ тут же закроется, перейдите в директорию @C:\backups\mysite.com\data\@ и найдите @2013-02-27.15-49-50.log@ файл (тут нужно понимать, что имя файла берется из даты, и у вас оно будет другое). Внутри этого файла будет такой же текст, как в закрывшемся окне. Каждый новый бекап будет записывать такой лог файл. Предыдущие логи удаляются и остается только последний. 

h3. Ну а что дальше?

Например, переименуйте ant-ftpbackup.xml в соотвтветствии с именем вашего бекапа и переместите его в директорию рядом с @todirectory@ директорией. Каждый такой xml файлик будет содержать разные настройки для разных бекапов (или разных сайтов, как больше нравится). Например, если у вас два бекапа для  mysite1.com и mysite2.net в директории @C:\backups@, то удобно хранить их в таком виде:

bc.. 
DIR mysite1.com/ 
FILE mysite1.com.xml
DIR mysite2.net/
FILE mysite2.net.xml

p. Так же вы можете подкорректировать "дополнительные параметры":./props.html для тонкой настройки бекапа. Например, вам может быть не нужно создавать архивы после каждого бекапа, потому что архивы уже создаются cron-задачей на сайте и по ftp вам нужно скачать уже готовые архивы, или вы хотите очищать директорию со скачанными файлами после того, как создали из них архив. 

p. Ну, и последний шаг - настройте выполнение бекапов по расписанию в планировщике задач. Например, раз в неделю или каждый день. Это уже зависит от вас.